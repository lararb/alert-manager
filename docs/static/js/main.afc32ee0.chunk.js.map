{"version":3,"sources":["components/Alert.js","components/AlertManager.js","App.js","index.js"],"names":["Alert","_this$props","this","props","fieldText","idGenerated","color","clickDelete","index","react_default","a","createElement","className","concat","id","onClick","React","Component","AlertManager","arrAlert","disableBtn","clickAdd","textInput","Fragment","htmlFor","type","ref","disabled","map","item","key","src_components_Alert","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createRef","state","handleClickAdd","bind","assertThisInitialized","handleDeleteAlert","min","max","Math","ceil","floor","random","_this2","inputValue","current","value","setState","prevState","toConsumableArray","getRandomInt","arr","length","event","btnParent","currentTarget","parentElement","splice","src_components_AlertManager","setChangeColor","handleDisableBtn","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.afc32ee0.chunk.js","sourcesContent":["import React from 'react';\nimport './Alert.css';\n\nclass Alert extends React.Component {\n    render() {\n        const {fieldText, idGenerated, color, clickDelete, index} = this.props;\n\n        return (\n            <div className={`alert_container ${color}`} id={index}>\n                <div className=\"alert_container--text\">\n                    <p className=\"alert_text\">{fieldText}</p>\n                    <small className=\"alert_id\">ID: {idGenerated}</small>\n                </div>\n                <button className=\"alert_btn\" id={index} onClick={clickDelete}><i className=\"fas fa-times\"></i></button>\n            </div>\n        );\n    }\n}\n\nexport default Alert;","import React from 'react';\nimport Alert from './Alert';\nimport './AlertManager.css';\n\n\nclass AlertManager extends React.Component {\n    render() {\n        const {arrAlert, disableBtn, color, clickAdd, clickDelete, textInput} = this.props;\n        return (\n            <React.Fragment>\n                <section className=\"field_section\">\n                    <div className=\"field_section--container\">\n                        <h1 className=\"app_title\">Alert manager</h1>\n                        <div className=\"field_container\">\n                            <label htmlFor=\"field\" className=\"field_label\">Campo de formulario</label>\n                            <input id=\"field\" type=\"text\" className=\"field\" ref={textInput}/>\n                            <button className={`field_btn ${disableBtn ? 'field_btn--disabled' : ''}`} onClick={clickAdd} disabled={disableBtn} >Add</button>\n                        </div>\n                    </div>\n                </section>\n                \n                <ul className=\"alert_list\">\n                    {arrAlert.map((item, index) =>\n                    <li className=\"alert_item\" key={index}>\n                        <Alert fieldText={item.fieldText} idGenerated={item.idGenerated} color={color} clickDelete={clickDelete} index={index}/>\n                    </li>)}\n                </ul>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default AlertManager;","import React from 'react';\nimport './App.css';\nimport AlertManager from './components/AlertManager';\n\n\nclass App extends React.Component { \n\n  constructor(props) {\n    super(props);\n\n    this.textInput = React.createRef();\n\n    this.state = {\n      arrAlert: [],\n      disableBtn: false\n    }\n\n    this.handleClickAdd = this.handleClickAdd.bind(this);\n    this.handleDeleteAlert = this.handleDeleteAlert.bind(this);\n  }\n\n  getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n \n  handleClickAdd() {\n    const inputValue = this.textInput.current.value;\n\n    this.setState(prevState => {\n      const newState = [...prevState.arrAlert,\n        {fieldText: inputValue,\n        idGenerated: this.getRandomInt(0, 1000)\n        }]\n\n      return {\n        arrAlert: newState\n      }\n    })\n  }\n\n  setChangeColor(arr) {\n    if(arr.length <= 3) {\n      return ('green');\n    } else if (arr.length >= 4 && arr.length <= 7) {\n      return ('yellow');\n    } else {\n      return ('red');\n    }\n  }\n\n  handleDisableBtn(arr) {\n\n    if(arr.length >= 12) {\n     return true\n    }\n  }\n\n  handleDeleteAlert(event) {\n    const btnParent = event.currentTarget.parentElement;\n\n    this.setState(prevState => {\n\n      prevState.arrAlert.splice(btnParent.id, 1);\n\n      return {\n        arrAlert: prevState.arrAlert\n     }\n    })\n  }\n\n\n  render() {\n    const {arrAlert} = this.state;\n\n    return (\n      <div className=\"App\">\n        <AlertManager arrAlert={arrAlert} color={this.setChangeColor(arrAlert)} disableBtn={this.handleDisableBtn(arrAlert)} clickAdd={this.handleClickAdd} clickDelete={this.handleDeleteAlert} textInput={this.textInput}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}